
#include  "WrapperV0x1.h"

#if ENABLE_CUDA

#include <cuda_runtime.h>
#include <device_launch_parameters.h>

#include <stdio.h>
#include <iostream>
#include <string>
#include <thread>

int WrapperV0x1::tag = 0;
int WrapperV0x1::tagCurrent = -1;

//////////////////////////////////////////////////////////////////////////////////////////////////////////
// GPU ///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
    
namespace {
}

void WrapperV0x1::UpdatePositionGPU(unsigned int count, CUDA::Vector3* positions, float* masses, CUDA::Vector3* forces, CUDA::Vector3* velocities) {

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////
// CPU ///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace {
}

void WrapperV0x1::UpdatePositionCPU(unsigned int count, CUDA::Vector3* positions, float* masses, CUDA::Vector3* forces, CUDA::Vector3* velocities) {

}

//...
#else

void WrapperV0x1::UpdatePositionGPU(unsigned int count, CUDA::Vector3* positions, float* masses, CUDA::Vector3* forces, CUDA::Vector3* velocities) { }
void WrapperV0x1::UpdatePositionCPU(unsigned int count, CUDA::Vector3* positions, float* masses, CUDA::Vector3* forces, CUDA::Vector3* velocities) { }

#endif
